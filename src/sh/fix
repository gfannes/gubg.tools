#!/usr/bin/ruby

require('open3')

run_cmd = ARGV.dup

re_error = /^([^:]+):(\d+):(\d+): .*error: (.+)$/
re_progress = %r{^\[(\d+)/(\d+)\]}

loop do
    fp__errors = Hash.new { |h, k| h[k] = [] }

    puts("Running '#{run_cmd * ' '}'")
    Open3.popen2(*run_cmd) do |_stdin, stdout, wait_thr|
        while line = stdout.gets
            line.chomp!
            puts line
            if md = re_progress.match(line)
                i, n = *md[(1...3)]
                puts("\n[Progress](i:#{i})(n:#{n})")
            end

            if md = re_error.match(line)
                fp, line, col, msg = *md[(1...5)]
                fp__errors[fp] << { line: line, col: col, msg: msg }
            end
        end

        status = wait_thr.value
        puts(status)
        if status.success?
            puts("Everything is fixed")
            exit(0)
        end
    end

    hx_cmd = %w[n]

    fp__errors.each do |fp, errors|
        puts("\nFound #{errors.size} errors in #{fp}")
        errors.each do |error|
            puts("\t#{error[:line]}: #{error[:msg]}")
        end

        error = errors[0]
        hx_cmd << "#{fp}:#{error[:line]}:#{error[:col]}"
    end

    system(hx_cmd * ' ')

    puts("Do you want to continue?")
    answer = STDIN.gets.chomp
    break unless answer.empty?
end
